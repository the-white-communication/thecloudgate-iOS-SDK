// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios16.6-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name twcLibrary
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Foundation
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency public class TwcWebViewController : UIKit.UIViewController, WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension twcLibrary.TwcWebViewController {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
}
public let TWC_BASE_KEY: Swift.String
public let TWC_PUSH_KEY: Swift.String
public struct TwcConfig {
  public init(brandKey: Swift.String? = nil, loginId: Swift.String? = nil, scenarioId: Swift.String? = nil, customParam: [Swift.String : Any]? = nil)
}
@_hasMissingDesignatedInitializers public class TwcManager {
  public static let shared: twcLibrary.TwcManager
  public var token: Swift.String?
  public func initPushToken(token: Swift.String?)
  public func isTwcChatOpenning() -> Swift.Bool
  public func getWebViewController() -> twcLibrary.TwcWebViewController
  public func hasTwcPushNotification() -> Swift.Bool
  public func reciveNotification(notification: UserNotifications.UNNotification)
  @objc deinit
}
extension twcLibrary.TwcManager {
  public func showChat(vc: UIKit.UIViewController, config: twcLibrary.TwcConfig, isStaging: Swift.Bool = false)
}
